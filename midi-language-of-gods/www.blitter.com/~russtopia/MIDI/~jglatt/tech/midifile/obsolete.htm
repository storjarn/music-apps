<HTML><HEAD><TITLE>MIDI File Format: Obsolete</TITLE></HEAD><BODY TEXT=BLACK BGCOLOR=WHITE LINK=RED VLINK=PURPLE ALINK=PURPLE><FONT SIZE=4>

The following Meta-Events are considered obsolete and should not be used. (The MMA would like you to know that they never endorsed their use, although since certain versions of CakeWalk utilized them, you may find existing MIDI files with these events). Use the <A HREF="port.htm" TARGET=Frame2>Device (Port) Name</A> Meta-Event instead of the MIDI Port Meta-Event.

<P><FONT COLOR=BLUE><H3><CENTER>MIDI Channel</CENTER></H3></FONT></P>

<P>FF 20 01 <I><FONT COLOR=RED><B>cc</B></FONT></I>

<P>This optional event which normally occurs at the beginning of an MTrk (ie, before any non-zero
delta-times and before any MetaEvents except Sequence Number) specifies to which MIDI Channel any subsequent
MetaEvent or System Exclusive events are associated. The data byte <B>cc</B>, is the MIDI channel, where 0 would be the
first channel.</P>

<P>The MIDI spec does not give a MIDI channel to System Exclusive events. Nor do MetaEvents have an imbedded channel.
When creating a Format 0 MIDI file, all of the System Exclusive and MetaEvents go into one track, so its hard to associate
these events with respective MIDI Voice messages. (ie, For example, if you wanted to name the musical part on MIDI channel
1 "Flute Solo", and the part on MIDI Channel 2 "Trumpet Solo", you'd need to use 2 Track Name MetaEvents. Since both events
would be in the one track of a Format 0 file, in order to distinguish which track name was associated with which MIDI
channel, you would place a MIDI Channel MetaEvent with a channel number of 0 before the "Flute Solo" Track Name MetaEvent,
and then place another MIDI Channel MetaEvent with a channel number of 1 before the "Trumpet Solo" Track Name MetaEvent.

<P>It is acceptable to have more than one MIDI channel event in a given track, if that track needs to associate various
events with various channels.

<P><FONT COLOR=BLUE><H3><CENTER>MIDI Port</CENTER></H3></FONT></P>

<P>FF 21 01 <I><FONT COLOR=RED><B>pp</B></FONT></I>

<P>This optional event which normally occurs at the beginning of an MTrk (ie, before any non-zero
delta-times and before any midi events) specifies out of which MIDI Port (ie, buss) the MIDI events
in the MTrk go. The data byte <I><FONT COLOR=RED><B>pp</B></FONT></I>, is the port number, where 0
would be the first MIDI buss in the system.

<P>The MIDI spec has a limit of 16 MIDI channels per MIDI input/output (ie, port, buss, jack, or whatever terminology
you use to describe the hardware for a single MIDI input/output). The MIDI channel number for a given event is
encoded into the lowest 4 bits of the event's Status byte. Therefore, the channel number is always 0 to
15. Many MIDI interfaces have multiple MIDI input/output busses in order to work around limitations in the MIDI
bandwidth (ie, allow the MIDI data to be sent/received more efficiently to/from several external modules), and to
give the musician more than 16 MIDI Channels. Also, some sequencers support more than one MIDI interface
used for simultaneous input/output. Unfortunately, there is no way to encode more than 16 MIDI channels
into a MIDI status byte, so a method was needed to identify events that would be output on, for example,
channel 1 of the second MIDI port versus channel 1 of the first MIDI port. This MetaEvent allows a sequencer
to identify which MTrk events get sent out of which MIDI port. The MIDI events following a MIDI Port MetaEvent
get sent out that specified port.</P>

<P>It is acceptable to have more than one Port event in a given track, if that track needs to output to another port at
some point in the track.

</FONT></BODY></HTML>
