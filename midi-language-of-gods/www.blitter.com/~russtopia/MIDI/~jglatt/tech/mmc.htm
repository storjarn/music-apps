<HTML><HEAD><Title>MIDI Machine Control (MMC)</TITLE></HEAD><BODY BGCOLOR=FFFFFF TEXT=000000 LINK=BLUE VLINK=PURPLE ALINK=PURPLE>

<B>MIDI Machine Control</B> (MMC) is a protocol specifically designed to remotely control hard disk recording systems,
and other machines used for record or playback, over a MIDI cable. The only
way to do this is with System Exclusive messages, and so several specific SysEx messages were defined in order
to implement MIDI Machine Control. Many devices support this protocol (although a more elaborate protocol
was later created called <B>MIDI Show Control</B>, which features a command set to control non-musical equipment such
as lights and effects devices).

<P>The information below is only a small portion of the complete specification, gleaned from material sent to me by
various sources. Some of this information was obtained via trial and error, so some important details may be missing.</P>

<FONT COLOR=BLUE><H2>Device ID</H2></FONT>

<P>Every device which can respond to MIDI Machine Control messages should have a unique (ie, individual) ID number. For
example, a hard disk recorder may have an ID of 1. A MIDI sequencer controlling the hard disk recorder's record and
playback may have an ID of 2. Usually, a device will allow the user to set its individual ID, so that any conflicts
between devices can be resolved. The range of allowable ID numbers is 0 to 127 inclusive. By having
unique ID numbers, you can use one of these ID numbers in a System Exclusive message, and then the various
devices that are all daisy-chained together via MIDI can determine which device a particular System Exclusive message
is meant for. Of course, even the master controller which is being used to control the entire MIDI Machine Control
network can have its own, unique ID, in case slaved controllers wish to create and send messages back to the master.</P>

<P>NOTE: It is possible to have two (or more) devices set to the same ID number. What this means is that both
devices always respond to the same MIDI Machine Control messages with that ID number, and you completely lose individual
control over each. There is also no limit as to how many individual ID numbers a given device can respond to. If
desired, a device can even respond to all 127 individual ID numbers, but this would be akin to a sound module
that only operates in Omni mode (ie, not too useful if you have other units daisy-chained). As you'll see below, the
All-Call Controllers ID make it a moot point to have a controller respond to more than one individual ID number.</P>

<P>An ID number of 127 (referred to as the "All-Call ID number") is reserved to mean "all devices respond". When a MIDI
Machine Control message with an ID of 127 is sent along the MIDI bus, all devices should respond to this message if
appropriate (ie, if they support the particular command of that message), regardless of their individual ID numbers.</P>

<FONT COLOR=BLUE><H2>The general form of an MMC message</H2></FONT>

<P>The general form of an MMC message (that is sent to, or generated by, an MMC device) is:</P>

<P>0xF0 0x7F <FONT COLOR=GREEN>&ltdeviceID&gt</FONT> 0x06 <FONT COLOR=ORANGE>&ltcommand&gt</FONT> 0xF7</P>

<P>The third byte is the Device ID.</P>

<P>The fifth byte is the <FONT COLOR=ORANGE>&ltcommand&gt</FONT>. It is one of the following values:</P>

<P>0x01 Stop
<BR>0x02 Play
<BR>0x03 Deferred Play
<BR>0x04 Fast Forward
<BR>0x05 Rewind
<BR>0x06 Record Strobe (Punch In)
<BR>0x07 Record Exit (Punch out)
<BR>0x09 Pause
</P>

<FONT COLOR=BLUE><H2>The Goto MMC message</H2></FONT>

<P>The Goto message allows recording or playback to be cued to a specific position in terms of SMPTE time (ie, a specific hour,
minute, second, SMPTE frame number, and subframe number). The format of the message is as follows:</P>

<P>0xF0 0x7F <FONT COLOR=GREEN>&ltdeviceID&gt</FONT> 0x06 0x44 0x06 0x01 <FONT COLOR=GREEN>&lthr&gt &ltmn&gt &ltsc&gt &ltfr&gt &ltff&gt</FONT> 0xF7</P>

<FONT COLOR=BLUE><H2>Identity Request</H2></FONT>

<P>It is possible to query an MMC device to find out it's identity. To do so, you send the device an Indentity
Request message as follows:</P>

<P>0xF0 0x7E <FONT COLOR=GREEN>&ltchannel&gt</FONT> 0x06 0x01 0xF7</P>

<P>The reply is device/manufacturer specific. For example, a Fostex D-160 will return the following System Exclusive
message:</P>

<P>0xF0, 0x7E, <FONT COLOR=GREEN>&ltchannel&gt</FONT>, 0x06 0x02 <FONT COLOR=BLUE>&ltID&gt</FONT> <FONT COLOR=BROWN>&ltfc1&gt &ltfc2&gt</FONT> <FONT COLOR=ORANGE>&ltfn1&gt &ltfn2&gt</FONT> <FONT COLOR=GREEN>&ltv1&gt &ltv2&gt &ltv3&gt &ltv4&gt</FONT> 0xF7

<P>where the above message contains the following parameters:</P>

<P>
<FONT COLOR=BLUE>&ltID&gt</FONT> - Device's ID
<BR><FONT COLOR=BROWN>&ltfc1&gt &ltfc2&gt</FONT>  - Device's family code
<BR><FONT COLOR=ORANGE>&ltfn1&gt &ltfn2&gt</FONT>  - Device's family number
<BR><FONT COLOR=GREEN>&ltv1&gt &ltv2&gt &ltv3&gt &ltv4&gt</FONT> - Software Version
</P>

<P>Consult the manual for a specific MMC device to see what particular values to use for the above parameters.</P>

<FONT COLOR=BLUE><H2>Other MMC messages</H2></FONT>

<P>There are likely more MMC messages that allow other functions. The format of these messages is not documented here.</P>

</BODY></HTML>
