<HTML><HEAD><TITLE>MIDI Specification: Song Position Pointer</TITLE></HEAD><BODY TEXT=BLACK BGCOLOR=WHITE LINK=RED VLINK=PURPLE ALINK=PURPLE><FONT SIZE=4>

<H2><FONT COLOR=GREEN><CENTER>Song Position Pointer</CENTER></FONT></H2></P>

<P>Category: System Common

<P><FONT COLOR=GREEN>Purpose</FONT>
<P>Some master device that controls sequence playback sends this message to force a slave device to cue the playback to
a certain point in the song/sequence. In other words, this message sets the device's "Song Position". This message
doesn't actually start the playback. It just sets up the device to be "ready to play" at a particular point in the song.

<P><FONT COLOR=GREEN>Status</FONT>
<P>0xF2

<P><FONT COLOR=GREEN>Data</FONT>
<P>Two data bytes follow the status. Just like with the Pitch Wheel, these two bytes are combined into a 14-bit
value. (See <A HREF="wheel.htm">Pitch Wheel</A>). This 14-bit value is the <B>MIDI Beat</B> upon which to start
the song. Songs are always assumed to start on a MIDI Beat of 0. Each MIDI Beat spans 6 <B>MIDI Clocks</B>. In
other words, each MIDI Beat is a 16th note (since there are 24 MIDI Clocks in a quarter note).

<P><FONT COLOR=GREEN>Errata</FONT>
<P>Example: If a Song Position value of 8 is received, then a sequencer (or drum box) should cue playback to the
third quarter note of the song. (8 MIDI beats * 6 MIDI clocks per MIDI beat = 48 MIDI Clocks. Since there are 24 MIDI
Clocks in a quarter note, the first quarter occurs on a time of 0 MIDI Clocks, the second quarter note occurs upon the 24th
MIDI Clock, and the third quarter note occurs on the 48th MIDI Clock).

<P>Often, the slave device has its playback tempo synced to the master via MIDI Clock. See
<A HREF="seq.htm">Syncing Sequence Playback</A>.

</FONT></BODY></HTML>