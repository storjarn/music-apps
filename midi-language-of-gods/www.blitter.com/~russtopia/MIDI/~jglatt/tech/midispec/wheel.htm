<HTML><HEAD><TITLE>MIDI Specification: Pitch Wheel</TITLE></HEAD><BODY TEXT=BLACK BGCOLOR=WHITE LINK=RED VLINK=PURPLE ALINK=PURPLE><FONT SIZE=4>

<H2><FONT COLOR=GREEN><CENTER>Pitch Wheel</CENTER></FONT></H2>

<P>Category: Voice

<P><FONT COLOR=GREEN>Purpose</FONT>
<P>To set the Pitch Wheel value. The pitch wheel is used to slide a note's pitch up or down in cents (ie, fractions of a
half-step). If the device is a MultiTimbral unit, then each one of its Parts may respond differently (or not at all) to Pitch
Wheel. The Part affected by a particular Pitch Wheel message is the one assigned to the message's MIDI channel.

<P><FONT COLOR=GREEN>Status</FONT>
<P>0xE0 to 0xEF where the low nibble is the MIDI channel.

<P><FONT COLOR=GREEN><A NAME="Combine">Data</A></FONT>
<P>Two data bytes follow the status. The two bytes should be combined together to form a 14-bit value.  The first data
byte's bits 0 to 6 are bits 0 to 6 of the 14-bit value. The second data byte's bits 0 to 6 are really bits 7 to 13 of the 14-bit
value. In other words, assuming that a C program has the first byte in the variable <B>First</B> and the second data
byte in the variable <B>Second</B>, here's how to combine them into a 14-bit value (actually 16-bit since most computer
CPUs deal with 16-bit, not 14-bit, integers):

<PRE><B><FONT SIZE=3><FONT COLOR=BLUE>unsigned short</FONT> CombineBytes(<FONT COLOR=BLUE>unsigned char</FONT> First, <FONT COLOR=BLUE>unsigned char</FONT> Second)
{
   <FONT COLOR=BLUE>unsigned short</FONT> _14bit;
   _14bit = (<FONT COLOR=BLUE>unsigned short</FONT>)Second;
   _14bit &lt;&lt;= 7;
   _14bit |= (<FONT COLOR=BLUE>unsigned short</FONT>)First;
   <FONT COLOR=BLUE>return</FONT>(_14bit);
}
</FONT></B></PRE>

<P>A combined value of 0x2000 is meant to indicate that the Pitch Wheel is centered (ie, the sounding notes aren't being
transposed up or down). Higher values transpose pitch up, and lower values transpose pitch down.

<P><FONT COLOR=GREEN>Errata</FONT>
<P>The Pitch Wheel range is usually adjustable by the musician on each MIDI device.  For example, although 0x2000 is
always center position, on one MIDI device, a 0x3000 could transpose the pitch up a whole step, whereas on another device
that may result in only a half step up. The GM spec recommends that MIDI devices default to using the entire range of
possible Pitch Wheel message values (ie, 0x0000 to 0x3FFF) as +/- 2 half steps transposition (ie, 4 half-steps total
range). The Pitch Wheel Range (or Sensitivity) is adjusted via an RPN controller message.

</FONT></BODY></HTML>
